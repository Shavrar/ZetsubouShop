@using ZetsubouShopWeb.ViewModels
@{
    ViewBag.Title = "User list";
}

<div class="row">
    <div class="col-md-2">
        <h2>Users:</h2>
        <div class="form-group">
            <label class="control-label">UserName</label>
            <div>
                <input class="form-control" type="text" name="UserName" />
                <span class="text-danger" name="UserName"></span>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label">FirstName</label>
            <div>
                <input class="form-control" type="text" name="FirstName" />
                <span class="text-danger" name="FirstName"></span>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label">LastName</label>
            <div>
                <input class="form-control" type="text" name="LastName"/>
                <span class="text-danger" name="LastName"></span>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label">Email</label>
            <div>
                <input class="form-control" type="text" name="Email" />
                <span class="text-danger" name="Email"></span>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label">Type</label>
            <div>
                @Html.DropDownList("Type", EnumHelper.GetSelectList(typeof(UserType)), new { @class = "form-control" })
                <span class="text-danger" name="Type"></span>
            </div>
        </div>
        <div class="form-group">
            <button id="btnSearch" class="btn btn-default">Search</button>
            <button id="btnClear" class="btn btn-default">Clear</button>
        </div>
    </div>
    <div class="col-md-10">
        <h2>
            <a href="http://localhost:5394/user/create" class="btn btn-primary">
                <span class="glyphicon glyphicon-plus"></span> Create New
            </a>

        </h2>
        

        <table class="table">
            <tr>
                <th></th>
                <th>UserName</th>
                <th>FirstName</th>
                <th>LastName</th>
                <th>Email</th>
                <th>Type</th>
                <th></th>
                <th></th>
            </tr>
            <tbody data-bind="foreach: users">
                <tr>

                    <td><input type="checkbox" data-bind="value: Id" /></td>
                    <td data-bind="text: UserName"></td>
                    <td data-bind="text: FirstName"></td>
                    <td data-bind="text: LastName"></td>
                    <td data-bind="text: Email"></td>
                    <td data-bind="text: GetType(Type)"></td>
                    <td>
                            <a data-bind="attr: { href: 'http://localhost:5394/user/edit/?Id=' + Id }" class="btn btn-primary"><span class="glyphicon glyphicon-pencil"></span> Edit</a>
                        </td>
                        <td>
                            <a data-bind="attr: { href: 'http://localhost:5394/user/remove/?Id=' + Id }" class="btn btn-danger" id="btnRemove">
                                <span class="glyphicon glyphicon-remove"></span> Remove
                            </a>
                        </td>

                </tr>
            </tbody>
        </table>
    </div>
</div>


@section scripts
{
    @Scripts.Render("~/bundles/knockout")

    <script>
        var viewModel;
        var token = '@(((TokenResponseModel)Session["token"]).AccessToken)';
        @{
            var en = EnumHelper.GetSelectList(typeof (UserType));
            var types = new Dictionary<string, string>();
            foreach (var element in en)
            {
                types.Add(element.Value,element.Text);
            }

        }
        var types = @Html.Raw(Json.Encode(@types));
        $().ready(function() {
            GetUsers();
        });

        function GetType(id) {
            return types[id];
        }

        function UsersViewModel(users) {
            var self = this;
            self.users = ko.observableArray(users);
        }

        function GetUsers() {
            $.ajax({
               
                url: "http://localhost:3077/api/User",
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("Authorization", "Bearer " + token);
                },
                success: function (users) {
                    console.log(users);
                    if (viewModel == null) {
                        viewModel = new UsersViewModel(users);
                        ko.applyBindings(viewModel);
                    } else {
                        viewModel.users.removeAll();
                        ko.utils.arrayPushAll(viewModel.users, users);
                    }
                },
                async:true,
                type: "GET",
                dataType: "json"
            });
        }
    </script>


}