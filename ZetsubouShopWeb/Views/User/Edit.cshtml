@using ZetsubouShopWeb.ViewModels
@model ZetsubouShopWeb.ViewModels.UserViewModel

@{
    var str = Model.Id == Guid.Empty ? "New user creation" : "Edit user";
    ViewBag.Title = str;
    ViewBag.BodyClass = str;
}

<div>
    <section>
        <h1 class="text-center">@ViewBag.Title</h1>
        @using (Html.BeginForm("Edit", "User", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form", role = "form" }))
            {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(m => m.Id)
            <div class="form-group">
                @Html.LabelFor(m => m.UserName, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.UserName, new { @class = "form-control input-lg" })
                @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.FirstName, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control input-lg" })
                @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.LastName, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.LastName, new { @class = "form-control input-lg" })
                @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
            </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Email, new { @class = "control-label" })
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control input-lg" })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Type, new {@class = "control-label"})
                    @Html.DropDownListFor(m => m.Type, EnumHelper.GetSelectList(typeof (UserType)), new {@class = "form-control input-lg"})
                    @Html.ValidationMessageFor(m => m.Type, "", new {@class = "text-danger"})
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Password, new { @class = "control-label" })
                    @Html.PasswordFor(m => m.Password,new { @class = "form-control input-lg" })
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                </div>
                <div class="row">
                    <div class="col-xs-6">
                        <button class="btn btn-block btn-secondary btn-lg btn_arrowRight"><span class="glyphicon glyphicon-chevron-right"></span> Save </button>
                    </div>


                </div>
        }
    </section>

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}