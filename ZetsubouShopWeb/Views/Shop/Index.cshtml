@using ZetsubouShopWeb.ViewModels
@{
    ViewBag.Title = "Home Page";
}

<div class="row">
    <div class="col-md-10 col-md-offset-2">
        <table class="table">
            <tr>
                <th>Name</th>
                <th>Description</th>
                <th>Type</th>
                <th>Price</th>
                <th>Amount</th>
                <th></th>
            </tr>
            <tbody data-bind="foreach: items">
                <tr>
                    <td data-bind="text: Name"></td>
                    <td data-bind="text: Description"></td>
                    <td data-bind="text: GetType(Type)"></td>
                    <td data-bind="text: Price"></td>
                    <td data-bind="text: Amount"></td>
                    <td>
                        <button data-bind="click: $parent.RemoveFromBasket" class="btn btn-danger" id="btnAdd">
                            <span class="glyphicon glyphicon-ban-circle"></span> Remove from basket
                        </button>
                    </td>

                </tr>
            </tbody>
            <tr>
                <th>Total Summ:</th>
                <th data-bind="text: summ"></th>
                <th>
                    <button class="btn btn-success" id="btnPay" data-toggle="modal" data-target="#myModal">
                        <span class="glyphicon glyphicon-chevron-right"></span> Pay with your life
                    </button>
                </th>
            </tr>
        </table>
    </div>
</div>
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Modal title</h4>
            </div>
            <div class="modal-body">
                <label id="message"></label><br/>
                <label>Your card number:</label><input type="text" id="editSCN"/>
                <br/>
                <label>Your password for card: </label><input type="password" id="editPassword"/>
                <br/>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" onclick="Pay()">Save changes</button>
                </div>
            </div>
        </div>
    </div>
</div>
@section scripts
{
    @Scripts.Render("~/bundles/knockout")

    <script>

        var viewModel;
        var token = '@(Session["token"] != null ? ((TokenResponseModel) Session["token"]).AccessToken : null)';
        @{
            var en = EnumHelper.GetSelectList(typeof (ItemType));
            var types = new Dictionary<string, string>();
            foreach (var element in en)
            {
                types.Add(element.Value, element.Text);
            }

        }
        var types = @Html.Raw(Json.Encode(@types));
        $().ready(function() {
            GetItems();
        });

        function GetType(id) {
            return types[id];
        }

        function ItemsViewModel(items) {
            var self = this;
            self.items = ko.observableArray(items);
            self.summ = ko.computed(function() {
                var sum = 0;
                for (var i = 0; i < self.items().length; i++) {
                    sum += self.items()[i].Amount * self.items()[i].Price;
                }
                return sum;
            });
            self.RemoveFromBasket = function(item) {
                $.ajax({
                    type: "DELETE",
                    beforeSend: function(xhr) {
                        xhr.setRequestHeader("Authorization", "Bearer " + token);
                    },
                    url: "http://localhost:3077/api/Shop/" + item.Id,
                    success: function() {
                        self.items.remove(item);
                        alert("Success");

                    },
                    error: function() {
                        alert("Failed");
                    },
                    async: true
                });
            }
            self.RemoveAll = function() {
                for (var i = 0; i < self.items().length; i++) {
                    $.ajax({
                        type: "DELETE",
                        beforeSend: function(xhr) {
                            xhr.setRequestHeader("Authorization", "Bearer " + token);
                        },
                        url: "http://localhost:3077/api/Shop/" + self.items()[i].Id,
                        async: true
                    });
                }
                self.items([]);
            }
        }


        function GetItems() {
            $.ajax({
                type: "GET",
                beforeSend: function(xhr) {
                    xhr.setRequestHeader("Authorization", "Bearer " + token);
                },
                url: "http://localhost:3077/api/Shop",
                success: function(items) {
                    console.log(items);
                    if (viewModel == null) {
                        viewModel = new ItemsViewModel(items);
                        ko.applyBindings(viewModel);
                    } else {
                        viewModel.items.removeAll();
                        ko.utils.arrayPushAll(viewModel.items, items);
                    }
                },
                async: true
            });
        }

        function Pay() {
            var transaction = {
                "amount": viewModel.summ(),
                "password": $("#editPassword").val(),
                "reciverCardNumber": 0,
                "senderCardNumber": $("#editSCN").val()
            }
           $.ajax({
               type: "POST",
               url: 'http://localhost:9095/api/transactions/shop',
               data: JSON.stringify(transaction),
               contentType: "application/json;charset=utf-8",
               success: function(items) {
                   viewModel.RemoveAll();
                   $('#myModal').modal('hide');
               },
               error:function() {
                   $("#message").text("PAYMENT HAS FAILED");
               },
               async: true
           });
       }
        </script>
}
